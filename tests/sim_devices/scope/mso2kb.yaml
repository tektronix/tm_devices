---
spec: '1.1'
devices:
  mso2kb:
    eom:
      USB INSTR:
        q: "\n"
        r: "\n"
      TCPIP INSTR:
        q: "\n"
        r: "\n"
      TCPIP SOCKET:
        q: "\n"
        r: "\n"
    dialogues:
      - q: '*IDN?'
        r: TEKTRONIX,MSO2024B,001061,CF:91.1CT FV:v1.30
      - q: '*OPC?'
        r: '1'
      - q: REBOOT
      - q: '*RST'
      - q: '*CLS'
      - q: :ETHERNET:NAME?
        r: HOSTNAME
    error:
      status_register:
        - q: '*ESR?'
          command_error: 32
          query_error: 4
      error_queue:
        - q: :ALLev?
          default: 0,"No events to report - queue empty"
          command_error: 113,"Undefined header; Command not found; EXAMPLE_COMMAND"
    properties:
      sre:
        default: 0
        getter:
          q: '*SRE?'
          r: '{:d}'
        setter:
          q: '*SRE {:d}'
        specs:
          min: 0
          max: 255
          type: int
      verbosity:
        default: 0
        getter:
          q: :VERBose?
          r: '{:s}'
        setter:
          q: :VERBose {:s}
      channel_select:
        default: :SELECT:BUS1 0;BUS2 0;CH1 1;CH2 0;CH3 0;CH4 0;MATH 0;REF1 0;REF2
          0;D0 1;D1 0;D2 0;D3 0;D4 0;D5 0;D6 0;D7 0;D8 0;D9 0;D10 0;D11 0;D12 0;D13
          0;D14 0;D15 0,CONTROL CH1
        getter:
          q: SELECT?
          r: '{:s}'
        setter:
          q: SELECT {:s}
      chan_1_state:
        default: '1'
        getter:
          q: SELECT:CH1?
          r: '{:s}'
        setter:
          q: SELECT:CH1 {:s}
      chan_2_state:
        default: '1'
        getter:
          q: SELECT:CH2?
          r: '{:s}'
        setter:
          q: SELECT:CH2 {:s}
      chan_3_state:
        default: '1'
        getter:
          q: SELECT:CH3?
          r: '{:s}'
        setter:
          q: SELECT:CH3 {:s}
      chan_4_state:
        default: '1'
        getter:
          q: SELECT:CH4?
          r: '{:s}'
        setter:
          q: SELECT:CH4 {:s}
      curve:
        default: 1,0,1,0,1
        getter:
          q: :CURVE?
          r: '{:s}'
        setter:
          q: :CURVE {:s}
      data_source:
        default: CH1
        getter:
          q: :DATA:SOURCE?
          r: '{:s}'
        setter:
          q: :DATA:SOURCE {:s}
      data_encoding:
        default: ASCI
        getter:
          q: :DATA:ENC?
          r: '{:s}'
        setter:
          q: :DATA:ENC {:s}
      ymult:
        default: '1'
        getter:
          q: WFMO:YMU?
          r: '{:s}'
        setter:
          q: WFMO:YMU {:s}
      yoff:
        default: '1'
        getter:
          q: WFMO:YOF?
          r: '{:s}'
        setter:
          q: WFMO:YOF {:s}
      yze:
        default: '1'
        getter:
          q: WFMO:YZE?
          r: '{:s}'
        setter:
          q: WFMO:YZE {:s}
